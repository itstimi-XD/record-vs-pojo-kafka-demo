plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    
    // Jackson 모듈들 - Record 지원을 위해 필수
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    
    // 개발 도구
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:kafka'
}

// Record 지원을 위한 컴파일 옵션 - 매우 중요!
tasks.withType(JavaCompile) {
    options.compilerArgs.add('-parameters')
}

tasks.named('test') {
    useJUnitPlatform()
}

// 성능 테스트를 위한 JMH 설정 (선택사항)
configurations {
    jmh
}

dependencies {
    jmh 'org.openjdk.jmh:jmh-core:1.37'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
}

task jmhJar(type: Jar, dependsOn: classes) {
    archiveBaseName = 'jmh-benchmark'
    from sourceSets.main.output
    from configurations.jmh.collect { it.isDirectory() ? it : zipTree(it) }
    manifest {
        attributes 'Main-Class': 'org.openjdk.jmh.Main'
    }
}